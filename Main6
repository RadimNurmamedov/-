import java.util.Scanner;
import java.util.ArrayList;
import java.util.Vector;
class Main6 {
    // lr1
    public static int bell(int n) {
        int[][] Bel = new int[n + 1][n + 1];
        Bel[0][0] = 1;
        for (int i = 1; i <= n; i++) {
            Bel[i][0] = Bel[i - 1][i - 1];
            for (int j = 1; j <= i; j++) {
                Bel[i][j] = Bel[i-1][j-1]+Bel[i][j-1];
            }
        }
        return Bel[n][0];
    }
    // lr2
    public static String translateWord(String str) {
        if (str != "") {
            String newstr = "";
            char ch = str.charAt(0);
            str = str.toLowerCase();
            if (str.matches("^(?i:[bcdfghjklmnpqrstvwxyz]).*") == true) {
                while (str.matches("^(?i:[bcdfghjklmnpqrstvwxyz]).*") == true) {
                    newstr += str.charAt(0);
                    str = str.substring(1);
                }
                str += newstr + "ay";
            } else if (str.matches("^(?i:[aeiouy]).*") == true) {
                str += "yay";
            }
            if (Character.toUpperCase(ch) == ch) {
                str = Character.toUpperCase(str.charAt(0)) + str.substring(1);
            }
        }
        return str;
    }

    public static String translateSentence(String str) {
        String newstr = (str + " ");
        str = "";
        String s = "";
        while (newstr.length() > 1) {
            if (newstr.matches("^(?i:[bcdfghjklmnpqrstvwxyz]).*") == true
                    || newstr.matches("^(?i:[aeiouy]).*") == true) {
                s += newstr.charAt(0);
                newstr = newstr.substring(1);
            } else {
                str += translateWord(s) + newstr.charAt(0);
                s = "";
                if (newstr.length() > 1)
                    newstr = newstr.substring(1);
            }
        }
        return str;
    }
    // lr3
    public static boolean validColor(String str) {
        if (str.matches(
                "^rgb\\((0|255|25[0-4]|2[0-4]\\d|1\\d\\d|0?\\d?\\d),(0|255|25[0-4]|2[0-4]\\d|1\\d\\d|0?\\d?\\d),(0|255|25[0-4]|2[0-4]\\d|1\\d\\d|0?\\d?\\d)\\)$") == true) {
            return true;
        } else if (str.matches(
                "^rgba[(](?:\\s*0*(?:\\d\\d?(?:\\.\\d+)?(?:\\s*%)?|\\.\\d+\\s*%|100(?:\\.0*)?\\s*%|(?:1\\d\\d|2[0-4]\\d|25[0-5])(?:\\.\\d+)?)\\s*,){3}\\s*0*(?:\\.\\d+|1(?:\\.0*)?)\\s*[)]$") == true) {
            return true;
        }
        return false;
    }
    // lr4
    public static String stripUrlParams (String str, String... args) {
        int i = str.indexOf("?");
        String bufPar = "", bufNum = "", res;
        if (i == -1)
            return str;
        i++;
        res = str.substring(0, i);
        Boolean boolPar = true, inArgs;
        ArrayList<String> params = new ArrayList<>(args.length);
        ArrayList<Integer> values = new ArrayList<>(args.length);
        while (i<str.length()) {
            if (str.charAt(i) == '&' && bufNum.length() > 0 && !boolPar) {
                if (params.indexOf(bufPar) != -1)
                    values.set((params.indexOf(bufPar)), Integer.parseInt(bufNum));
                boolPar = true;
                bufPar = "";
                bufNum = "";
            }
            else
                if (!boolPar)
                    bufNum += str.charAt(i);
            if (str.charAt(i) == '=' && bufPar.length() > 0 && boolPar) {
                if (params.indexOf(bufPar) == -1) {
                    inArgs = false;
                    for (String j:args)
                        if (j.equals(bufPar))
                            inArgs = true;
                    if (!inArgs) {
                        params.add(bufPar);
                        values.add(null);
                    }
                }
                boolPar = false;
            }
            else
                if (boolPar && str.charAt(i) != '&')
                    bufPar += str.charAt(i);
            i++;
        }
        if (!boolPar && bufNum.length() > 0) // for last
            if (params.indexOf(bufPar) != -1)
                values.set((params.indexOf(bufPar)), Integer.parseInt(bufNum));
        for (i=0; i<params.size(); i++) {
            res += params.get(i) + "=" + values.get(i);
            if (i<params.size() - 1)
                res += "&";
        }
        return res;
    }

    // lr5
    public static String getHashTags(String str) {
        String newstr2 = str;
        String newstr3 = "";
        while (newstr2.length() >= 1) {
            if (newstr2.matches("^(?i:[bcdfghjklmnpqrstvwxyz ]).*") == true
                    || newstr2.matches("^(?i:[aeiouy ]).*") == true) {
                newstr3 += newstr2.charAt(0);
            }
            newstr2 = newstr2.substring(1);
        }
        newstr2 = newstr3.toLowerCase()+" ";
        String newstr = "";
        String[] mas = { "", "", "" };
        while (newstr2.length() > 1) {
            newstr = newstr2.substring(0, newstr2.indexOf(" "));
            newstr2 = newstr2.substring(newstr2.indexOf(" ") + 1);
            if (newstr.length() > mas[0].length()) {
                mas[0] = newstr;
            }
        }
        newstr2 = newstr3.toLowerCase()+" ";
        while (newstr2.length() > 1) {
            newstr = newstr2.substring(0, newstr2.indexOf(" "));
            newstr2 = newstr2.substring(newstr2.indexOf(" ") + 1);
            if (newstr.length() > mas[1].length() && newstr.equals(mas[0]) == false) {
                mas[1] = newstr;
            }
        }
        newstr2 = newstr3.toLowerCase()+" ";
        while (newstr2.length() > 1) {
            newstr = newstr2.substring(0, newstr2.indexOf(" "));
            newstr2 = newstr2.substring(newstr2.indexOf(" ") + 1);
            if (newstr.length() > mas[2].length() && newstr.equals(mas[0]) == false && newstr.equals(mas[1]) == false) {
                mas[2] = newstr;
            }
        }
        if (mas[0].equals(""))
            return "";
        if (mas[1].equals(""))
            return "['#" + mas[0] + "']";
        if (mas[2].equals(""))
            return "['#" + mas[0] + "', '#" + mas[1] + "']";
        return "['#" + mas[0] + "', '#" + mas[1] + "', '#" + mas[2] + "']";
    }
    // lr6
    static Vector<Integer> vect = new Vector<Integer>(); // can change size
    public static int ulam(int n)
    {
        vect.add(1);
        vect.add(2);
        for (int i=3; vect.size()<n; i++) {
            int count = 0;
            for (int j=0; j<vect.size()-1; j++) {
                for (int k=j+1; k<vect.size(); k++) {
                    if (vect.get(j) + vect.get(k) == i)
                        count++;
                    if (count > 1)
                        break;
                }
                if (count > 1)
                    break;
            }
            if (count == 1) {
                vect.add(i);
            }
        }
        return vect.get(n-1);
    }


    // lr7
    public static String longestNonrepeatingSubstring(String str) {
        String newstr1 = "";
        String newstr2 = "";
        for (int i = 0; i < str.length(); i++) {
            if (newstr1.indexOf(str.charAt(i)) == -1) {
                newstr1 += str.charAt(i);
            } else {
                if (newstr1.length() > newstr2.length())
                    newstr2 = newstr1;
                newstr1 = "";
                i--;
            }
            if (i == str.length() - 1) {
                if (newstr1.length() > newstr2.length())
                    newstr2 = newstr1;
            }
        }
        return newstr2;
    }

    // lr8
    public static String convertToRoman(int n) {
        if (n > 3999 && n <= 0)
            return "invailed";
        String res = "";
        while (n >= 1000) {
            n -= 1000;
            res += "M";
        }
        if (n >= 900) {
            n -= 900;
            res += "CM";
        }
        if (n >= 500) {
            n -= 500;
            res += "D";
        }
        if (n >= 400) {
            n -= 400;
            res += "CD";
        }
        while (n >= 100) {
            n -= 100;
            res += "C";
        }
        if (n >= 90) {
            n -= 90;
            res += "XC";
        }
        if (n >= 50) {
            n -= 50;
            res += "L";
        }
        if (n >= 40) {
            n -= 40;
            res += "XL";
        }
        while (n >= 10) {
            n -= 10;
            res += "X";
        }
        if (n == 9) {
            n -= 9;
            res += "IX";
        }
        if (n >= 5) {
            n -= 5;
            res += "V";
        }
        if (n == 4) {
            n -= 4;
            res += "IV";
        }
        while (n >= 1) {
            n -= 1;
            res += "I";
        }
        return res;
    }
    // lr9
    public static boolean formula(String str)
    {
        int m = 0,g=0;
        int begin = str.indexOf('=');
        String rez = str.substring(begin+1,str.length());
        int rez1=Integer.parseInt (rez);
        for (int i = 0; i < str.length(); i++) 
        {
                if((int) str.charAt(i) == 42 || ((int) str.charAt(i) == 43)
                    || ((int) str.charAt(i) == 45|| ((int) str.charAt(i) == 47)))
                m=i;
        }
        String chisl1 = str.substring(0,m);
        int chislo1=Integer.parseInt (chisl1);

        String chisl2 = str.substring(m+1,begin);
        int chislo2=Integer.parseInt (chisl2);

        for (int i = 0; i < str.length(); i++) 
        {
                if((int) str.charAt(i) == 42)
                    g=1;
                else if((int) str.charAt(i) == 43)
                    g=2;
                else if((int) str.charAt(i) == 45)
                    g=3;
                else if((int) str.charAt(i) == 47)
                    g=4;
        }
        if (g==1)
        {
            if (chislo1*chislo2==rez1)
            return true;
            else return false;
        }
        else if(g==2)
        {
            if (chislo1+chislo2==rez1)
                    return true;
                    else return false;
        }
        else if (g==3)
        {
            if (chislo1-chislo2==rez1)
            return true;
            else return false;
        }
        else if (g==4)
        {
            if (chislo1/chislo2==rez1)
            return true;
            else return false;
        }
        else return false;
    }
    // lr10
    public static boolean palindromeDescendant(int n) {
        String str = "" + n;
        String newstr1="";
        String newstr2="";
        int a = 0;
        String newstr3 = "";
        while (str.length() > 1) {
            if(str.length()%2!=0)
            {
                newstr1 = str.substring(0,(int)str.length()/2+1);
                a = newstr1.length();
                while (a!=0) 
                {
                    a--;
                    newstr2 += newstr1.charAt(a);
                }                
                if(newstr2.equals(str.substring((int)str.length()/2)))
                    return true;
                else
                    return false;
            }
            else
            {
                newstr1 = str.substring(0,str.length()/2);
                a = newstr1.length();
                while (a!=0) 
                {
                    a--;
                    newstr2 += newstr1.charAt(a);
                }
                if(newstr2.equals(str.substring((int)str.length()/2)))
                    return true;
                else
                {
                    for (int i=0; i<str.length(); i+=2) 
                    {
                        newstr3 += Integer.toString(Integer.parseInt(str.substring(i,i+1)) + Integer.parseInt(str.substring(i+1,i+2)));
                    }
                    str = newstr3;
                }
                newstr1 = "";
                newstr2 = "";
                newstr3 = "";
                a=0;
            }
        }
        return true;
    }
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        System.out.print("Введите число: ");
        int num11 = in.nextInt();
        System.out.println("Соответсвующее число Белла = " + bell(num11));
        //-------------------------------------------------------//
        in.nextLine();
        System.out.print("\n Задача 2: \n");
        System.out.print("Введите слово или предложение: ");
        String str21 = in.nextLine();
        if(str21.split(" ").length>1)
        System.out.println("Результат = " + (translateSentence(str21))); 
        else System.out.println("Результат = " + (translateWord(str21))); 
        //-------------------------------------------------------//
        System.out.print("\n Задача 3: \n");
        System.out.print("Введите строкy: ");
        String str31 = in.nextLine();
        System.out.println("Формат = " + validColor(str31));
        //-------------------------------------------------------//
        System.out.print("\n Задача 4: \n");
        System.out.print("Введите URL строкy: ");
        String str41 = in.nextLine();
        System.out.println("Результат = " + stripUrlParams(str41));
        //-------------------------------------------------------//
        System.out.print("\n Задача 5: \n");
        System.out.print("Введите строку: ");
        String str51 = in.nextLine();
        System.out.println("Результат = " + getHashTags(str51));
        //-------------------------------------------------------//
        System.out.print("\n Задача 6: \n");
        System.out.print("Введите число: ");
        int num61 = in.nextInt();
        System.out.println("Соответсвующее число в последовательности Улама = " + ulam(num61));
        //-------------------------------------------------------//
        System.out.print("\n Задача 7: \n");
        in.nextLine();
        System.out.print("Введите строку: ");
        String str71 = in.nextLine();
        System.out.println("Результат = " + longestNonrepeatingSubstring(str71));
        //-------------------------------------------------------//
        System.out.print("\n Задача 8: \n");
        System.out.print("Введите число: ");
        int num81 = in.nextInt();
        System.out.println("Число преобразованное в римское = " + convertToRoman(num81));
        //-------------------------------------------------------//
        System.out.print("\n Задача 9: \n");
        in.nextLine();
        System.out.print("Введите уравнение: ");
        String str91 = in.next();
        System.out.println("Результат = " + formula(str91));
        //-------------------------------------------------------//
        System.out.print("\n Задача 10: \n");
        System.out.print("Введите число: ");
        int num10 = in.nextInt();
        System.out.println("Результат \n" + (palindromeDescendant(num10)));
    }
}
